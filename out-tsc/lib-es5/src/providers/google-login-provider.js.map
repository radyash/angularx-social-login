{"version":3,"file":"google-login-provider.js","sourceRoot":"","sources":["../../../lib/src/providers/google-login-provider.ts"],"names":[],"mappings":"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","sourcesContent":["import { BaseLoginProvider } from '../entities/base-login-provider';\nimport { SocialUser } from '../entities/user';\nimport { LoginOpt } from '../auth.service';\n\ndeclare let gapi: any;\n\nexport class GoogleLoginProvider extends BaseLoginProvider {\n\n    public static readonly PROVIDER_ID: string = 'GOOGLE';\n\n    protected auth2: any;\n\n    constructor(private clientId: string, private opt: LoginOpt = { scope: 'email' }) { super(); }\n\n    initialize(): Promise<void> {\n        return new Promise((resolve, reject) => {\n            this.loadScript(GoogleLoginProvider.PROVIDER_ID,\n                'https://apis.google.com/js/platform.js',\n                () => {\n                    gapi.load('auth2', () => {\n                        this.auth2 = gapi.auth2.init({\n                            ...this.opt,\n                            client_id: this.clientId\n                        });\n\n                        this.auth2.then(() => {\n                            this._readyState.next(true);\n                            resolve();\n                        }).catch((err: any) => {\n                            reject(err);\n                        });\n                    });\n                });\n        });\n    }\n\n    getLoginStatus(): Promise<SocialUser> {\n        return new Promise((resolve, reject) => {\n            this.onReady().then(() => {\n                if (this.auth2.isSignedIn.get()) {\n                    let user: SocialUser = new SocialUser();\n                    let profile = this.auth2.currentUser.get().getBasicProfile();\n                    let token = this.auth2.currentUser.get().getAuthResponse(true).access_token;\n                    let backendToken = this.auth2.currentUser.get().getAuthResponse(true).id_token;\n                    let refreshToken = this.auth2.currentUser.get().getAuthResponse(true).refresh_token;\n\n                    user.id = profile.getId();\n                    user.name = profile.getName();\n                    user.email = profile.getEmail();\n                    user.photoUrl = profile.getImageUrl();\n                    user.firstName = profile.getGivenName();\n                    user.lastName = profile.getFamilyName();\n                    user.authToken = token;\n                    user.idToken = backendToken;\n                    user.refreshToken = refreshToken;\n                    resolve(user);\n                } else {\n                    reject('No user is currently logged in.');\n                }\n            });\n        });\n    }\n\n    signIn(opt?: LoginOpt): Promise<SocialUser> {\n        return new Promise((resolve, reject) => {\n            this.onReady().then(() => {\n                const offlineAccess: boolean = (opt && opt.offline_access) || (this.opt && this.opt.offline_access);\n                //let promise = !offlineAccess ? this.auth2.signIn(opt) : this.auth2.grantOfflineAccess(opt);\n                console.log('OPT  ' , opt);\n                let promise = this.auth2.grantOfflineAccess(opt);\n\n                promise.then((response: any) => {\n                    let user: SocialUser = new SocialUser();\n                    let profile = this.auth2.currentUser.get().getBasicProfile();\n                    let token = this.auth2.currentUser.get().getAuthResponse(true).access_token;\n                    let backendToken = this.auth2.currentUser.get().getAuthResponse(true).id_token;\n                    let refreshToken = this.auth2.currentUser.get().getAuthResponse(true).refresh_token;\n\n\n                    user.id = profile.getId();\n                    user.name = profile.getName();\n                    user.email = profile.getEmail();\n                    user.photoUrl = profile.getImageUrl();\n                    user.firstName = profile.getGivenName();\n                    user.lastName = profile.getFamilyName();\n                    user.authToken = token;\n                    user.idToken = backendToken;\n                    user.refreshToken = refreshToken;\n\n                    if (response && response.code) {\n                        user.authorizationCode = response.code;\n                    }\n\n                    resolve(user);\n                }, (closed: any) => {\n                    reject('User cancelled login or did not fully authorize.');\n                }).catch((err: any) => {\n                    reject(err);\n                });\n            });\n        });\n    }\n\n    signOut(revoke?: boolean): Promise<any> {\n        return new Promise((resolve, reject) => {\n            this.onReady().then(() => {\n                let signOutPromise;\n                if (revoke) {\n                    signOutPromise = this.auth2.disconnect();\n                } else {\n                    signOutPromise = this.auth2.signOut();\n                }\n\n                signOutPromise.then((err: any) => {\n                    if (err) {\n                        reject(err);\n                    } else {\n                        resolve();\n                    }\n                }).catch((err: any) => {\n                    reject(err);\n                });\n            });\n        });\n    }\n}\n"]}