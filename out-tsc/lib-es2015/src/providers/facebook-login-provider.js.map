{"version":3,"file":"facebook-login-provider.js","sourceRoot":"","sources":["../../../lib/src/providers/facebook-login-provider.ts"],"names":[],"mappings":"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","sourcesContent":["import { BaseLoginProvider } from '../entities/base-login-provider';\nimport { SocialUser } from '../entities/user';\nimport { LoginOpt } from '../auth.service';\n\ndeclare let FB: any;\n\nexport class FacebookLoginProvider extends BaseLoginProvider {\n\n    public static readonly PROVIDER_ID: string = 'FACEBOOK';\n\n    constructor(\n        private clientId: string,\n        private opt: LoginOpt = { scope: 'email,public_profile' },\n        private locale: string = 'en_US',\n        private fields: string = 'name,email,picture,first_name,last_name',\n        private version: string = 'v2.9'\n    ) { super(); }\n\n    initialize(): Promise<void> {\n        return new Promise((resolve, reject) => {\n            this.loadScript(FacebookLoginProvider.PROVIDER_ID,\n                `//connect.facebook.net/${this.locale}/sdk.js`,\n                () => {\n                    FB.init({\n                        appId: this.clientId,\n                        autoLogAppEvents: true,\n                        cookie: true,\n                        xfbml: true,\n                        version: this.version\n                    });\n                    // FB.AppEvents.logPageView(); #FIX for #18\n\n                    this._readyState.next(true);\n                    resolve();\n                });\n        });\n    }\n\n    getLoginStatus(): Promise<SocialUser> {\n        return new Promise((resolve, reject) => {\n            this.onReady().then(() => {\n                FB.getLoginStatus((response: any) => {\n                    if (response.status === 'connected') {\n                        let authResponse = response.authResponse;\n                        FB.api(`/me?fields=${this.fields}`, (fbUser: any) => {\n                            let user: SocialUser = new SocialUser();\n\n                            user.id = fbUser.id;\n                            user.name = fbUser.name;\n                            user.email = fbUser.email;\n                            user.photoUrl = 'https://graph.facebook.com/' + fbUser.id + '/picture?type=normal';\n                            user.firstName = fbUser.first_name;\n                            user.lastName = fbUser.last_name;\n                            user.authToken = authResponse.accessToken;\n\n                            user.facebook = fbUser;\n\n                            resolve(user);\n                        });\n                    } else {\n                        reject('No user is currently logged in.');\n                    }\n                });\n            });\n        });\n    }\n\n    signIn(opt?: LoginOpt): Promise<SocialUser> {\n        return new Promise((resolve, reject) => {\n            this.onReady().then(() => {\n                FB.login((response: any) => {\n                    if (response.authResponse) {\n                        let authResponse = response.authResponse;\n                        FB.api(`/me?fields=${this.fields}`, (fbUser: any) => {\n                            let user: SocialUser = new SocialUser();\n\n                            user.id = fbUser.id;\n                            user.name = fbUser.name;\n                            user.email = fbUser.email;\n                            user.photoUrl = 'https://graph.facebook.com/' + fbUser.id + '/picture?type=normal';\n                            user.firstName = fbUser.first_name;\n                            user.lastName = fbUser.last_name;\n                            user.authToken = authResponse.accessToken;\n\n                            user.facebook = fbUser;\n\n                            resolve(user);\n                        });\n                    } else {\n                        reject('User cancelled login or did not fully authorize.');\n                    }\n                }, this.opt);\n            });\n        });\n    }\n\n    signOut(): Promise<any> {\n        return new Promise((resolve, reject) => {\n            this.onReady().then(() => {\n                FB.logout((response: any) => {\n                    resolve();\n                });\n            });\n        });\n    }\n\n}\n"]}